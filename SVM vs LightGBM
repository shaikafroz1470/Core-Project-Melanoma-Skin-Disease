import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from lightgbm import LGBMClassifier
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt

# Load your dataset (Replace 'your_dataset.csv' with the actual dataset file)
data = pd.read_csv('/content/melanoma.csv')

# Extract features and target
X = data[['anatomy', 'age', 'target', 'sex']].values  # You can include more features as needed
y = data['diagnosis'].values

num_iterations = 10

svm_accuracies = []
lgbm_accuracies = []

for iteration in range(num_iterations):
    
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=iteration)

    svm_classifier = SVC(kernel='linear')
    lgbm_classifier = LGBMClassifier(verbose=-1)  
    svm_classifier.fit(X_train, y_train)
    lgbm_classifier.fit(X_train, y_train)

    # Make predictions
    svm_predictions = svm_classifier.predict(X_test)
    lgbm_predictions = lgbm_classifier.predict(X_test)

    # Calculate accuracies
    svm_accuracy = accuracy_score(y_test, svm_predictions)
    lgbm_accuracy = accuracy_score(y_test, lgbm_predictions)

    # Append accuracies to the lists
    svm_accuracies.append(svm_accuracy)
    lgbm_accuracies.append(lgbm_accuracy)

    # Print accuracy for each iteration
    print(f"Iteration {iteration + 1}: SVM Accuracy = {svm_accuracy * 100:.2f}%, LightGBM Accuracy = {lgbm_accuracy * 100:.2f}%")

# Plot the accuracies
labels = ['SVM', 'LightGBM']
accuracies = [np.mean(svm_accuracies), np.mean(lgbm_accuracies)]

plt.bar(labels, accuracies)
plt.xlabel('Classifier')
plt.ylabel('Average Accuracy')
plt.title(f'Comparison of SVM and LightGBM over {num_iterations} iterations')
plt.show()

# Print average accuracy over all iterations
if np.mean(svm_accuracies) > np.mean(lgbm_accuracies):
    print(f"\nAverage Accuracy: SVM has an average accuracy of {np.mean(svm_accuracies) * 100:.2f}%, which is relatively higher than LightGBM, which has an average accuracy of {np.mean(lgbm_accuracies) * 100:.2f}%")
else:
    print(f"\nAverage Accuracy: LightGBM has an average accuracy of {np.mean(lgbm_accuracies) * 100:.2f}%, which is relatively higher than SVM, which has an average accuracy of {np.mean(svm_accuracies) * 100:.2f}%")
